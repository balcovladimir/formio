// See authoritative guide for publishing to public Maven central repo
// with Gradle: http://central.sonatype.org/pages/gradle.html
// and also http://jedicoder.blogspot.cz/2011/11/automated-gradle-project-deployment-to.html

// Plugins
buildscript {
  repositories { jcenter() }
}

// Other plugins using plugins DSL
// release plugin adding release task, see: https://github.com/researchgate/gradle-release
plugins {
  id 'net.researchgate.release' version '2.6.0'
  id 'java'
  id 'maven' // takes care of the metadata, generates the pom.xml when publishing to repo, deploys build output to repo
  id 'signing' // signs generated artifacts: https://docs.gradle.org/current/userguide/signing_plugin.html
  id 'eclipse'
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
  mavenCentral()
}

dependencies {
  // Required compile-time dependencies
  implementation "javax.validation:validation-api:2.0.1.Final"
  implementation "commons-fileupload:commons-fileupload:1.4"
  
  // Optional dependencies
  implementation "javax.servlet:servlet-api:2.5"
  implementation "javax.portlet:portlet-api:2.0"

  // Test dependencies 
  testImplementation "junit:junit:4.8.2"
  testImplementation "org.hibernate:hibernate-validator:6.1.2.Final"
  testImplementation "javax.el:javax.el-api:3.0.1-b06"
  testImplementation "org.glassfish:javax.el:3.0.0"
  testImplementation "org.springframework:spring-mock:2.0.8"
  testImplementation "commons-httpclient:commons-httpclient:3.1"
  testImplementation "org.springframework:spring-core:3.2.12.RELEASE"
  testImplementation "org.springframework:spring-portlet:2.0.8"
}

// Task for generating javadoc artifact
task javadocJar(type: Jar) {
  getArchiveClassifier().set('javadoc')
  from javadoc
}

// Task for generating sources artifact
task sourcesJar(type: Jar) {
  getArchiveClassifier().set('sources')
  from sourceSets.main.allSource
}

// Gather all output artifacts together
artifacts {
  archives jar
  archives javadocJar
  archives sourcesJar
}

// See: http://blog.sonatype.com/2010/01/how-to-generate-pgp-signatures-with-maven/
if (isReleaseVersion) {
  signing {
    // Conditions under which the signing is executed
    required { isReleaseVersion }
    sign configurations.archives
  }
}

// Deployment to Maven Central repository can be started using: gradle uploadArchives
// The credentials for signing and upload are stored in <user-home>/.gradle/gradle.properties file
// Signing key is stored in <user-home>/AppData/Roaming/gnupg/secring.gpg
uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      // Sonatype Nexus Staging
      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      // Sonatype Nexus Snapshost
      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'Formio'
        packaging 'jar'
        // optionally artifactId can be defined here
        artifactId 'formio' 
        description 'Form definition and binding framework for Java platform'
        url 'http://www.formio.net'

        scm {
          connection 'scm:git:git@github.com:beranradek/formio.git'
          developerConnection 'scm:git:git@github.com:beranradek/formio.git'
          url 'git@github.com:beranradek/formio.git'
        }

        licenses {
          license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }

        developers {
          developer {
            id 'beranradek'
            name 'Radek Beran'
            email 'beran.radek@seznam.cz'
          }
        }
      }
    }
  }
}

// Turning off doclint javadoc style checker that produces strict errors.
// See: http://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html
if (JavaVersion.current().isJava8Compatible()) {
  allprojects {
    tasks.withType(Javadoc) {
      options.addStringOption('Xdoclint:none', '-quiet')
    }
  }
}

// Make sure uploadArchives (uploading artifacts to Maven central) is performed
// after the build with the release version has finished 
afterReleaseBuild.dependsOn uploadArchives
